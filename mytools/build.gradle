apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName



    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    //Android
    def android = rootProject.ext.androidWidgets
    api android.appcompat
    api android.constraint
    api android.design
    api android.card
    api android.recycler
    api android.flexBox
    api android.workManager
    api android.navFragment
    api android.navUi
    api android.paging
    api android.pagingRx


    api 'com.noober.background:core:1.3.0'
    implementation'com.github.tbruyelle:rxpermissions:0.10.2'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api "io.reactivex.rxjava2:rxjava:2.1.16"
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.8.1'


    def depends = rootProject.ext.tools
    api depends.logger
    api depends.banner
    api depends.adapterHelper
    api depends.lottie
    api depends.viewModelandLiveData
    annotationProcessor depends.viewModelandLiveDataAnnotation
    api (depends.vlayout){
        transitive = true
    }
    api depends.immersionbar
    api depends.photoView
    api depends.agentWeb
    api depends.glide
    annotationProcessor depends.glideAnno
    api depends.transitionHelper
    api depends.guide





}
